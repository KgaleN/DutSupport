// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Support.Data;

#nullable disable

namespace Support.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231101141932_DbSet")]
    partial class DbSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Support.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Support.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SupportEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupportEmployeeId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Support.Models.SupportEmployee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SupportEmployees");
                });

            modelBuilder.Entity("Support.Models.SupportLead", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SupportLead");
                });

            modelBuilder.Entity("Support.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SupportLeadId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TicketPriority")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupportEmployeeId");

                    b.HasIndex("SupportLeadId");

                    b.ToTable("Tickets", t =>
                        {
                            t.HasTrigger("SomeTrigger");
                        });
                });

            modelBuilder.Entity("Support.Models.TicketAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketResponseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("TicketResponseId");

                    b.ToTable("TicketAttachments");
                });

            modelBuilder.Entity("Support.Models.TicketResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("EmailRecipient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("TicketResponses");
                });

            modelBuilder.Entity("Support.Models.Chat", b =>
                {
                    b.HasOne("Support.Models.SupportEmployee", null)
                        .WithMany("Chats")
                        .HasForeignKey("SupportEmployeeId");
                });

            modelBuilder.Entity("Support.Models.Ticket", b =>
                {
                    b.HasOne("Support.Models.SupportEmployee", null)
                        .WithMany("AssignedTickets")
                        .HasForeignKey("SupportEmployeeId");

                    b.HasOne("Support.Models.SupportLead", null)
                        .WithMany("TicketInbox")
                        .HasForeignKey("SupportLeadId");
                });

            modelBuilder.Entity("Support.Models.TicketAttachment", b =>
                {
                    b.HasOne("Support.Models.Ticket", null)
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId");

                    b.HasOne("Support.Models.TicketResponse", null)
                        .WithMany("Attachments")
                        .HasForeignKey("TicketResponseId");
                });

            modelBuilder.Entity("Support.Models.TicketResponse", b =>
                {
                    b.HasOne("Support.Models.Chat", null)
                        .WithMany("Responses")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("Support.Models.Chat", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("Support.Models.SupportEmployee", b =>
                {
                    b.Navigation("AssignedTickets");

                    b.Navigation("Chats");
                });

            modelBuilder.Entity("Support.Models.SupportLead", b =>
                {
                    b.Navigation("TicketInbox");
                });

            modelBuilder.Entity("Support.Models.Ticket", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("Support.Models.TicketResponse", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
